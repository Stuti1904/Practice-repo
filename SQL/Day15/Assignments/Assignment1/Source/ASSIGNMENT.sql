/*CREATING TABLES FOR ASSIGNMENT*/


CREATE TABLE ACCOUNTTYPE
(
TYPEID INT PRIMARY KEY,
TYPENAME VARCHAR(200)
)
INSERT INTO ACCOUNTTYPE VALUES(101, 'SAVING'),
(102, 'CURRENT')

CREATE TABLE ACCOUNT
(
ACOUNTID INT PRIMARY KEY,
HOLDERNAME VARCHAR(100),
BALANCE INT,
ACCOUNT_TYPE_ID INT FOREIGN KEY REFERENCES ACCOUNTTYPE(TYPEID)
)
INSERT INTO ACCOUNT VALUES(1, 'ABC', 1000, 102),
(2, 'DEF', 10000, 101),
(3, 'GHI', 12000, 101)

CREATE TABLE TRANSACTIONS
(
FROM_ACCOUNT INT FOREIGN KEY REFERENCES ACCOUNT(ACOUNTID),
TO_ACCOUNT INT FOREIGN KEY REFERENCES ACCOUNT(ACOUNTID),
AMOUNT INT
)
/*FOR IMPLEMENTING THE TRANSACTION WE WILL NEED AN UPDATE IN THE ACCOUNTS WHEN INSERT OPERATION HAPPENS ON THE TRANSACTION TABLE, THUS WE CREATE TRIGGERS*/

CREATE TRIGGER TRG_ONACCOUNT
ON DBO.TRANSACTIONS
FOR INSERT
AS
SET NOCOUNT ON
BEGIN TRY
BEGIN TRANSACTION TRA
   UPDATE Account SET Balance = Balance - (SELECT Amount FROM inserted)
   WHERE ACOUNTID = (SELECT FROM_ACCOUNT FROM inserted)

   UPDATE Account SET Balance = Balance + (SELECT Amount FROM inserted)
   WHERE ACOUNTID = (SELECT TO_ACCOUNT FROM inserted)

    PRINT 'Accounts Updated. Transaction successful.'
   COMMIT TRANSACTION
END TRY
BEGIN CATCH
ROLLBACK TRANSACTION
PRINT 'ROLLBACK TRANSACTION'
END CATCH

INSERT INTO TRANSACTIONS VALUES (2,1,1000)