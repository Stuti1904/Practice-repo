/*CREATING TABLES FOR ASSIGNMENT*/

CREATE TABLE STUDENTS(
STUDENTID INT PRIMARY KEY,
STUDENTNAME VARCHAR(50),
TOTALFEES FLOAT,
REMAININGAMT FLOAT
)

CREATE TABLE COURSES(
COURSEID INT PRIMARY KEY,
COURSENAME VARCHAR(50),
FEES FLOAT
)
CREATE TABLE CourseEnrolled(
STUDENTID INT FOREIGN KEY REFERENCES STUDENTS(STUDENTID),
COURSEID INT FOREIGN KEY REFERENCES COURSES(COURSEID)
)
CREATE TABLE FEEPAYMENT(
STUDENTID INT FOREIGN KEY REFERENCES STUDENTS(STUDENTID),
AMOUNTPAID FLOAT,
DATEOFPAYMENT DATE
)

INSERT INTO STUDENTS VALUES(1, 'ABC', 1000, 1000),
(2, 'DEF', 1000,1000)

INSERT INTO COURSES VALUES(11, 'JAVA', 500),
(12, 'WEB DESIGINING','1000'),
(13, 'SQL', '1000')

INSERT INTO CourseEnrolled VALUES(1, 11),
(1,12),
(2,12)

INSERT INTO FEEPAYMENT VALUES(1, 1000,'2022-07-04')

/*CREATING TRIGGERS*/

CREATE TRIGGER trgCourseEnrolled
ON
DBO.CourseEnrolled
FOR INSERT
AS
 SET NOCOUNT ON;

    UPDATE STUDENTS

    SET [TOTALFEES] = [TOTALFEES] + (SELECT Fees FROM COURSES WHERE CourseID = (SELECT CourseID FROM inserted)),

    [REMAININGAMT] = [REMAININGAMT] + (SELECT Fees FROM CourseS WHERE CourseID = (SELECT CourseID FROM inserted))

    WHERE StudentID =

    (SELECT StudentID FROM inserted)

    PRINT 'FEES ADDED'


	/*CREATING TRIGGER FOR FEESPAYMENT*/
	CREATE TRIGGER [dbo].[trgInsertRemainingFees]

   ON  [dbo].[FeePayment]

   AFTER INSERT

AS

BEGIN


    SET NOCOUNT ON;

    UPDATE STUDENTS

    SET RemainingAmt = RemainingAmt - (SELECT AmountPaid FROM inserted)

    WHERE StudentID = (SELECT StudentID FROM inserted)

    PRINT 'Fees Updated'



END


